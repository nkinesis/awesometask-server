Awesome Task Manager
By Gabriel C. Ullmann
Last update: 17/12/2018

===
About this project:

- Description: a task manager application with statistics and basic user management functionality
- Stack: Angular => Axios => [request] => Java => Hibernate => MySQL

===
Basic concepts applied to this project:

Angular:
- Creating components
- Routing components
- Communicating components via services
- Binding HTML attributes and classes
- Manipulating the DOM via Renderer
- Making charts using ng-charts2

HTML/CSS:
- Using glyphicons
- Using Bootstrap basic components
- Creating a burger menu from scratch (not using a component)
- Serving Angular apps (ng serve --host ip)
- Using HTML attributes for input validation/limitation

Requests:
- Making requests using Axios
- Receiving requests via HTTP servlet

Java:
- Doing actions on Glassfish startup
- JSON to Object conversion (and vice-versa)
- Using List and ArrayList<T>
- Using and configuring Hibernate for all DB operations

MySQL:
- Creating database using visul interface
- Reverse Engineering the DB via Hibernate
- Obtaining DML

Design Patterns:
- Using MVC
- Using DAO

===

Query documentation:

Task history:
- Filters: Due Date (=), Description (like)
- Defaults: Today, Empty
- Conditions: none
- Order By: Priority (ASC), Due Date (DESC), ID (DESC)
- Limit: 100 records

Task form:
- Filters: none
- Conditions: Status = 0
- Order By: Priority (ASC), Due Date (DESC), ID (DESC)
- Limit: 100 records

Statistics (Tasks by Priority Index):
- Filters: Due Date (>= +7 days)
- Defaults: Today
- Conditions: Status = 0, range must be Due Date +7 days, Due Date must not be today (Days to Deadline = 0)
- Order By: Priority Index (ASC), Priority (ASC), Days to Deadline (ASC)
- Limit: 50 records

Statistics (Date x Avg. Task Priority):
- Filters: Due Date (>= +7 days)
- Defaults: Today
- Conditions: range must be Due Date +7 days
- Order By: none
- Limit: none

===

Remaining problems:

- There is no login screen.
- Password is sent as plain-text on every User update (not a production app, so OK)
- If you press Enter on any component, Angular will trigger the first functional button. To fix this, I had to put a button without a function as the first button on every component.
- I could not find a way to update SOME fields through Hibernate, you must send the whole object every time.